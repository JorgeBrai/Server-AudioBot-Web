{"ast":null,"code":"var _jsxFileName = \"/Users/andmedina/Documents/Personal/food-orders-dashboard/src/DashboardComponent.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import TicketComponent from './TicketComponent';\n// import database from './firebase'; // Adjust the path as necessary\n\n// const DashboardComponent = () => {\n//     const [orders, setOrders] = useState([]);\n\n//     useEffect(() => {\n//         const ordersRef = database.ref('information'); // Adjust the reference as needed\n//         ordersRef.on('value', (snapshot) => {\n//             const data = snapshot.val();\n//             const orderList = Object.keys(data).map(key => ({\n//                 ...data[key],\n//                 id: key\n//             }));\n//             setOrders(orderList);\n//         });\n\n//         return () => ordersRef.off(); // Unsubscribe on unmount\n//     }, []);\n\n//     return (\n//         <div>\n//             {orders.map(order => <TicketComponent key={order.id} order={order} />)}\n//         </div>\n//     );\n// };\n\n// export default DashboardComponent;\n// import React, { useEffect, useState } from 'react';\n// import { ref, onValue, off } from 'firebase/database';\n// import { database } from './firebase';\n\n// const InformationComponent = () => {\n//     const [info, setInfo] = useState({});\n\n//     useEffect(() => {\n//         const infoRef = ref(database, 'orders');\n//         onValue(infoRef, (snapshot) => {\n//             console.log(\"snapshot\",snapshot.val())\n//             setInfo(snapshot.val());\n//         });\n\n//         console.log(\"infoRef\",info)\n\n//         return () => off(infoRef);\n//     }, []);\n\n//     return (\n//         <div>\n//             <h1>Welcome Message</h1>\n//             <p>{ info}</p>\n//         </div>\n//     );\n// };\n\n// export default InformationComponent;\n\nimport React, { useEffect, useState } from 'react';\nimport TicketComponent from './TicketComponent';\n// import { ref, onValue, off } from 'firebase/database';\nimport { database } from './firebase'; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardComponent = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    const ordersRef = ref(database, 'orders'); // Adjust the reference as needed\n    ordersRef.on('value', snapshot => {\n      const data = snapshot.val();\n      const orderList = Object.keys(data).map(key => ({\n        ...data[key],\n        id: key\n      }));\n      setOrders(orderList);\n    });\n    return () => ordersRef.off(); // Unsubscribe on unmount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: orders.map(order => /*#__PURE__*/_jsxDEV(TicketComponent, {\n      order: order\n    }, order.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 34\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardComponent, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = DashboardComponent;\nexport default DashboardComponent;\nvar _c;\n$RefreshReg$(_c, \"DashboardComponent\");","map":{"version":3,"names":["React","useEffect","useState","TicketComponent","database","jsxDEV","_jsxDEV","DashboardComponent","_s","orders","setOrders","ordersRef","ref","on","snapshot","data","val","orderList","Object","keys","map","key","id","off","children","order","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andmedina/Documents/Personal/food-orders-dashboard/src/DashboardComponent.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import TicketComponent from './TicketComponent';\n// import database from './firebase'; // Adjust the path as necessary\n\n// const DashboardComponent = () => {\n//     const [orders, setOrders] = useState([]);\n\n//     useEffect(() => {\n//         const ordersRef = database.ref('information'); // Adjust the reference as needed\n//         ordersRef.on('value', (snapshot) => {\n//             const data = snapshot.val();\n//             const orderList = Object.keys(data).map(key => ({\n//                 ...data[key],\n//                 id: key\n//             }));\n//             setOrders(orderList);\n//         });\n\n//         return () => ordersRef.off(); // Unsubscribe on unmount\n//     }, []);\n\n//     return (\n//         <div>\n//             {orders.map(order => <TicketComponent key={order.id} order={order} />)}\n//         </div>\n//     );\n// };\n\n// export default DashboardComponent;\n// import React, { useEffect, useState } from 'react';\n// import { ref, onValue, off } from 'firebase/database';\n// import { database } from './firebase';\n\n// const InformationComponent = () => {\n//     const [info, setInfo] = useState({});\n\n//     useEffect(() => {\n//         const infoRef = ref(database, 'orders');\n//         onValue(infoRef, (snapshot) => {\n//             console.log(\"snapshot\",snapshot.val())\n//             setInfo(snapshot.val());\n//         });\n\n//         console.log(\"infoRef\",info)\n\n//         return () => off(infoRef);\n//     }, []);\n\n//     return (\n//         <div>\n//             <h1>Welcome Message</h1>\n//             <p>{ info}</p>\n//         </div>\n//     );\n// };\n\n// export default InformationComponent;\n\nimport React, { useEffect, useState } from 'react';\nimport TicketComponent from './TicketComponent';\n// import { ref, onValue, off } from 'firebase/database';\nimport {database} from './firebase'; // Adjust the path as necessary\n\nconst DashboardComponent = () => {\n    const [orders, setOrders] = useState([]);\n\n    useEffect(() => {\n        const ordersRef = ref(database, 'orders'); // Adjust the reference as needed\n        ordersRef.on('value', (snapshot) => {\n            const data = snapshot.val();\n            const orderList = Object.keys(data).map(key => ({\n                ...data[key],\n                id: key\n            }));\n            setOrders(orderList);\n        });\n\n        return () => ordersRef.off(); // Unsubscribe on unmount\n    }, []);\n\n    return (\n        <div>\n            {orders.map(order => <TicketComponent key={order.id} order={order} />)}\n        </div>\n    );\n};\n\nexport default DashboardComponent;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C;AACA,SAAQC,QAAQ,QAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAGC,GAAG,CAACR,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC3CO,SAAS,CAACE,EAAE,CAAC,OAAO,EAAGC,QAAQ,IAAK;MAChC,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;MAC3B,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAACK,GAAG,CAACC,GAAG,KAAK;QAC5C,GAAGN,IAAI,CAACM,GAAG,CAAC;QACZC,EAAE,EAAED;MACR,CAAC,CAAC,CAAC;MACHX,SAAS,CAACO,SAAS,CAAC;IACxB,CAAC,CAAC;IAEF,OAAO,MAAMN,SAAS,CAACY,GAAG,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIjB,OAAA;IAAAkB,QAAA,EACKf,MAAM,CAACW,GAAG,CAACK,KAAK,iBAAInB,OAAA,CAACH,eAAe;MAAgBsB,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACH,EAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEd,CAAC;AAACrB,EAAA,CAtBID,kBAAkB;AAAAuB,EAAA,GAAlBvB,kBAAkB;AAwBxB,eAAeA,kBAAkB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}