{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import TicketComponent from './TicketComponent';\n// import database from './firebase'; // Adjust the path as necessary\n\n// const DashboardComponent = () => {\n//     const [orders, setOrders] = useState([]);\n\n//     useEffect(() => {\n//         const ordersRef = database.ref('information'); // Adjust the reference as needed\n//         ordersRef.on('value', (snapshot) => {\n//             const data = snapshot.val();\n//             const orderList = Object.keys(data).map(key => ({\n//                 ...data[key],\n//                 id: key\n//             }));\n//             setOrders(orderList);\n//         });\n\n//         return () => ordersRef.off(); // Unsubscribe on unmount\n//     }, []);\n\n//     return (\n//         <div>\n//             {orders.map(order => <TicketComponent key={order.id} order={order} />)}\n//         </div>\n//     );\n// };\n\n// export default DashboardComponent;\n// import React, { useEffect, useState } from 'react';\n// import { ref, onValue, off } from 'firebase/database';\n// import { database } from './firebase';\n\n// const InformationComponent = () => {\n//     const [info, setInfo] = useState({});\n\n//     useEffect(() => {\n//         const infoRef = ref(database, 'orders');\n//         onValue(infoRef, (snapshot) => {\n//             console.log(\"snapshot\",snapshot.val())\n//             setInfo(snapshot.val());\n//         });\n\n//         console.log(\"infoRef\",info)\n\n//         return () => off(infoRef);\n//     }, []);\n\n//     return (\n//         <div>\n//             <h1>Welcome Message</h1>\n//             <p>{ info}</p>\n//         </div>\n//     );\n// };\n\n// export default InformationComponent;\n\n// import React, { useEffect, useState } from 'react';\n// import TicketComponent from './TicketComponent';\n// import { ref, onValue, off } from 'firebase/database';\n// import {database} from './firebase'; // Adjust the path as necessary\n\n// const DashboardComponent = () => {\n//     const [orders, setOrders] = useState([]);\n\n//     useEffect(() => {\n//         const ordersRef = ref(database, 'orders'); // Adjust the reference as needed\n//         ordersRef.on('value', (snapshot) => {\n//             const data = snapshot.val();\n//             const orderList = Object.keys(data).map(key => ({\n//                 ...data[key],\n//                 id: key\n//             }));\n//             setOrders(orderList);\n//         });\n\n//         return () => ordersRef.off(); // Unsubscribe on unmount\n//     }, []);\n\n//     return (\n//         <div>\n//             {orders.map(order => <TicketComponent key={order.id} order={order} />)}\n//         </div>\n//     );\n// };\n\n// export default DashboardComponent;","map":{"version":3,"names":[],"sources":["/Users/andmedina/Documents/Personal/food-orders-dashboard/src/DashboardComponent.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import TicketComponent from './TicketComponent';\n// import database from './firebase'; // Adjust the path as necessary\n\n// const DashboardComponent = () => {\n//     const [orders, setOrders] = useState([]);\n\n//     useEffect(() => {\n//         const ordersRef = database.ref('information'); // Adjust the reference as needed\n//         ordersRef.on('value', (snapshot) => {\n//             const data = snapshot.val();\n//             const orderList = Object.keys(data).map(key => ({\n//                 ...data[key],\n//                 id: key\n//             }));\n//             setOrders(orderList);\n//         });\n\n//         return () => ordersRef.off(); // Unsubscribe on unmount\n//     }, []);\n\n//     return (\n//         <div>\n//             {orders.map(order => <TicketComponent key={order.id} order={order} />)}\n//         </div>\n//     );\n// };\n\n// export default DashboardComponent;\n// import React, { useEffect, useState } from 'react';\n// import { ref, onValue, off } from 'firebase/database';\n// import { database } from './firebase';\n\n// const InformationComponent = () => {\n//     const [info, setInfo] = useState({});\n\n//     useEffect(() => {\n//         const infoRef = ref(database, 'orders');\n//         onValue(infoRef, (snapshot) => {\n//             console.log(\"snapshot\",snapshot.val())\n//             setInfo(snapshot.val());\n//         });\n\n//         console.log(\"infoRef\",info)\n\n//         return () => off(infoRef);\n//     }, []);\n\n//     return (\n//         <div>\n//             <h1>Welcome Message</h1>\n//             <p>{ info}</p>\n//         </div>\n//     );\n// };\n\n// export default InformationComponent;\n\n// import React, { useEffect, useState } from 'react';\n// import TicketComponent from './TicketComponent';\n// import { ref, onValue, off } from 'firebase/database';\n// import {database} from './firebase'; // Adjust the path as necessary\n\n// const DashboardComponent = () => {\n//     const [orders, setOrders] = useState([]);\n\n//     useEffect(() => {\n//         const ordersRef = ref(database, 'orders'); // Adjust the reference as needed\n//         ordersRef.on('value', (snapshot) => {\n//             const data = snapshot.val();\n//             const orderList = Object.keys(data).map(key => ({\n//                 ...data[key],\n//                 id: key\n//             }));\n//             setOrders(orderList);\n//         });\n\n//         return () => ordersRef.off(); // Unsubscribe on unmount\n//     }, []);\n\n//     return (\n//         <div>\n//             {orders.map(order => <TicketComponent key={order.id} order={order} />)}\n//         </div>\n//     );\n// };\n\n// export default DashboardComponent;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}